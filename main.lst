RC51 COMPILER V03.03.40,  MAIN                    10/15/13  19:33:49  PAGE  1

QCW(0x00002F32)

WIN32 RC51 COMPILER V03.03.40, COMPILATION OF MODULE MAIN      
OBJECT MODULE PLACED IN q:\robo\oficial\main.obj
COMPILER INVOKED BY: RC51.EXE Q:\ROBO\OFICIAL\MAIN.C OBJECT(Q:\ROBO\OFICIAL\MAIN
            -.OBJ) PIN(C:\RIDE\INC;C:\RIDE\INC\51) PIN(C:\RIDE\INC\51\) NOAM PR(
            -Q:\ROBO\OFICIAL\MAIN.LST) CD SB OE(1) SM FP(NOFLOAT) PW(80) NOIS UN
            -SIGNEDCHAR ET(CHAR) 

stmt level    source
   1          #include "headers/d1000_api.h"
   2          
   3          void robo();
   4          void curva();
   5          
   6          
   7          int main(){
   8   1              vermelho(1);
   9   1              amarelo(1);
  10   1              verde(1);
  11   1              
  12   1              while(1)
  13   1                      robo();
  14   1                      
  15   1              return 0;
  16   1      }         
  17          
  18          int cnt_re = 0;
  19          
  20          void robo(){
  21   1         sensorFrontal();
  22   1         
  23   1      
  24   1         if(sen_fro > 100){
  25   2             
  26   2             cnt_re = 0;
  27   2             
  28   2             sensorEsquerdo();
  29   2             sensorDireito();
  30   2             
  31   2             
  32   2             
  33   2             if(sen_esq < 100){
  34   3                 girar('D');
  35   3                 delay(10);
  36   3                 mover('F');
  37   3                 delay(10);
  38   3             } 
  39   2             
  40   2             if(sen_dir < 100){
  41   3                 girar('E');
  42   3                 delay(10);
  43   3                 mover('F');
  44   3                 delay(10);
  45   3             }          
  46   2             
  47   2             mover('F');
  48   2             
  49   2         }else{           
  50   2                 
  51   2                 cnt_re++;
  52   2                 
  53   2                 mover('T');
  54   2                 if(cnt_re < 5)
  55   2                         delay(15);
  56   2            else{
  57   3               delay(30);
  58   3               
  59   3               if(sen_esq > sen_dir)
  60   3                  girar('E');
  61   3               else
  62   3                  if(sen_esq == sen_dir)
  63   3                      mover('F');
  64   3                  else
  65   3                     girar('D');
  66   3                     
  67   3               delay(10); 
  68   3               
  69   3            }
  70   2                 mover('P');
  71   2                 
  72   2                 curva();
  73   2            
  74   2         }
  75   1         
  76   1      }
  77          
  78          
  79          void curva(){
  80   1          sensorEsquerdo();
  81   1          sensorDireito();
  82   1      
  83   1          if(sen_esq > 500 && sen_dir > 500){
  84   2          
  85   2              if(sen_esq > sen_dir)
  86   2                  girar('E');
  87   2              else
  88   2                  girar('D');
  89   2      
  90   2              delay(20);
  91   2              
  92   2              mover('P');
  93   2              delay(5);
  94   2              mover('F');
  95   2              delay(20);
  96   2              
  97   2              return;
  98   2          
  99   2          }
 100   1      
 101   1      
 102   1          if(sen_esq > 500){
 103   2            
 104   2              girar('E');
 105   2              delay(10);
 106   2                    return;
 107   2          }
 108   1          
 109   1      
 110   1          if(sen_dir > 500){
 111   2              girar('D');
 112   2              delay(10);
 113   2              return;
 114   2          }
 115   1      }                   
RC51 COMPILER V03.03.40,  MAIN                    10/15/13  19:33:49  PAGE  2

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION _delay (BEGIN)
              ; Register R6R7 is assigned to parameter j
                                           ; SOURCE LINE # 7 
0000 EE             MOV    A,R6
0001 4F             ORL    A,R7
0002 7004           JNZ    ?NXT5
                                           ; SOURCE LINE # 8 
0004 E4             CLR    A
0005 FE             MOV    R6,A
0006 7F05           MOV    R7,#005H
0008         ?NXT5:
                                           ; SOURCE LINE # 12 
0008 758901         MOV    TMOD,#001H
                                           ; SOURCE LINE # 13 
000B 758CDC         MOV    TH0,#0DCH
                                           ; SOURCE LINE # 14 
000E 758A00         MOV    TL0,#000H
                                           ; SOURCE LINE # 15 
0011 D28C           SETB   TR0
              ; R2R3 is assigned to i
                                           ; SOURCE LINE # 17 
0013 E4             CLR    A
0014 FA             MOV    R2,A
0015 FB             MOV    R3,A
0016         ?FOR1:
                                           ; SOURCE LINE # 19 
0016 E4             CLR    A
0017 FE             MOV    R6,A
0018 FF             MOV    R7,A
0019         ?WHILE2:
                                           ; SOURCE LINE # 20 
0019 EE             MOV    A,R6
001A 6480           XRL    A,#080H
001C B48004         CJNE   A,#080H,?LAB6
001F BF0501         CJNE   R7,#005H,?LAB6
0022 D3             SETB   C
0023         ?LAB6:
0023 5012           JNC    ?NXT7
0025         ?WHILE3:
                                           ; SOURCE LINE # 22 
0025 308DFD         JNB    TF0,?WHILE3
                                           ; SOURCE LINE # 23 
0028 758CDC         MOV    TH0,#0DCH
                                           ; SOURCE LINE # 24 
002B 758A00         MOV    TL0,#000H
                                           ; SOURCE LINE # 25 
002E C28D           CLR    TF0
                                           ; SOURCE LINE # 26 
0030 0F             INC    R7
0031 EF             MOV    A,R7
0032 70E5           JNZ    ?WHILE2
0034 0E             INC    R6
0035 80E2           SJMP   ?WHILE2
0037         ?NXT7:
                                           ; SOURCE LINE # 17 
0037 0B             INC    R3
0038 BB01DB         CJNE   R3,#001H,?FOR1
                                           ; SOURCE LINE # 29 
003B 22             RET    

            ; FUNCTION _delay (END)

            ; FUNCTION sensorEsquerdo (BEGIN)
                                           ; SOURCE LINE # 9 
0000 D2A0           SETB   trigger
                                           ; SOURCE LINE # 10 
0002 E4             CLR    A
0003 FE             MOV    R6,A
0004 FF             MOV    R7,A
0005 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 11 
0008 C2A0           CLR    trigger
                                           ; SOURCE LINE # 12 
000A E4             CLR    A
000B F500    R      MOV    sen_esq,A
000D F500    R      MOV    sen_esq+01H,A
000F F500    R      MOV    sen_esq+02H,A
0011 F500    R      MOV    sen_esq+03H,A
0013         ?WHILE6:
                                           ; SOURCE LINE # 13 
0013 20A104         JB     eco_esq,?NXT12
0016 C290           CLR    LED_VM
0018 80F9           SJMP   ?WHILE6
001A         ?NXT12:
                                           ; SOURCE LINE # 14 
001A D290           SETB   LED_VM
001C         ?WHILE7:
                                           ; SOURCE LINE # 15 
001C 30A116         JNB    eco_esq,?NXT13
001F 0500    R      INC    sen_esq+03H
0021 E500    R      MOV    A,sen_esq+03H
0023 70F7           JNZ    ?WHILE7
0025 0500    R      INC    sen_esq+02H
0027 E500    R      MOV    A,sen_esq+02H
0029 70F1           JNZ    ?WHILE7
002B 0500    R      INC    sen_esq+01H
002D E500    R      MOV    A,sen_esq+01H
002F 70EB           JNZ    ?WHILE7
0031 0500    R      INC    sen_esq
0033 80E7           SJMP   ?WHILE7
0035         ?NXT13:
                                           ; SOURCE LINE # 16 
0035 22             RET    

            ; FUNCTION sensorEsquerdo (END)

            ; FUNCTION sensorDireito (BEGIN)
                                           ; SOURCE LINE # 20 
0000 D2A0           SETB   trigger
                                           ; SOURCE LINE # 21 
0002 E4             CLR    A
0003 FE             MOV    R6,A
0004 FF             MOV    R7,A
0005 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 22 
0008 C2A0           CLR    trigger
                                           ; SOURCE LINE # 23 
000A E4             CLR    A
000B F500    R      MOV    sen_dir,A
000D F500    R      MOV    sen_dir+01H,A
000F F500    R      MOV    sen_dir+02H,A
0011 F500    R      MOV    sen_dir+03H,A
0013         ?WHILE10:
                                           ; SOURCE LINE # 24 
0013 20A304         JB     eco_dir,?NXT16
0016 C291           CLR    LED_AM
0018 80F9           SJMP   ?WHILE10
001A         ?NXT16:
                                           ; SOURCE LINE # 25 
001A D291           SETB   LED_AM
001C         ?WHILE11:
                                           ; SOURCE LINE # 26 
001C 30A316         JNB    eco_dir,?NXT17
001F 0500    R      INC    sen_dir+03H
0021 E500    R      MOV    A,sen_dir+03H
0023 70F7           JNZ    ?WHILE11
0025 0500    R      INC    sen_dir+02H
0027 E500    R      MOV    A,sen_dir+02H
0029 70F1           JNZ    ?WHILE11
002B 0500    R      INC    sen_dir+01H
002D E500    R      MOV    A,sen_dir+01H
002F 70EB           JNZ    ?WHILE11
0031 0500    R      INC    sen_dir
0033 80E7           SJMP   ?WHILE11
0035         ?NXT17:
                                           ; SOURCE LINE # 27 
0035 22             RET    

            ; FUNCTION sensorDireito (END)

            ; FUNCTION sensorFrontal (BEGIN)
                                           ; SOURCE LINE # 31 
0000 D2A0           SETB   trigger
                                           ; SOURCE LINE # 32 
0002 E4             CLR    A
0003 FE             MOV    R6,A
0004 FF             MOV    R7,A
0005 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 33 
0008 C2A0           CLR    trigger
                                           ; SOURCE LINE # 34 
000A E4             CLR    A
000B F500    R      MOV    sen_fro,A
000D F500    R      MOV    sen_fro+01H,A
000F F500    R      MOV    sen_fro+02H,A
0011 F500    R      MOV    sen_fro+03H,A
0013         ?WHILE14:
                                           ; SOURCE LINE # 35 
0013 20A204         JB     eco_fro,?NXT20
0016 C292           CLR    LED_VD
0018 80F9           SJMP   ?WHILE14
001A         ?NXT20:
                                           ; SOURCE LINE # 36 
001A D292           SETB   LED_VD
001C         ?WHILE15:
                                           ; SOURCE LINE # 37 
001C 30A216         JNB    eco_fro,?NXT21
001F 0500    R      INC    sen_fro+03H
0021 E500    R      MOV    A,sen_fro+03H
0023 70F7           JNZ    ?WHILE15
0025 0500    R      INC    sen_fro+02H
0027 E500    R      MOV    A,sen_fro+02H
0029 70F1           JNZ    ?WHILE15
002B 0500    R      INC    sen_fro+01H
002D E500    R      MOV    A,sen_fro+01H
002F 70EB           JNZ    ?WHILE15
0031 0500    R      INC    sen_fro
0033 80E7           SJMP   ?WHILE15
0035         ?NXT21:
                                           ; SOURCE LINE # 38 
0035 22             RET    

            ; FUNCTION sensorFrontal (END)

            ; FUNCTION _amarelo (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 8 
0000 EF             MOV    A,R7
0001 4E             ORL    A,R6
0002 24FF           ADD    A,#0FFH
0004 9291           MOV    LED_AM,C
                                           ; SOURCE LINE # 9 
0006 22             RET    

            ; FUNCTION _amarelo (END)

            ; FUNCTION _verde (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 12 
0000 EF             MOV    A,R7
0001 4E             ORL    A,R6
0002 24FF           ADD    A,#0FFH
0004 9292           MOV    LED_VD,C
                                           ; SOURCE LINE # 13 
0006 22             RET    

            ; FUNCTION _verde (END)

            ; FUNCTION _vermelho (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 16 
0000 EF             MOV    A,R7
0001 4E             ORL    A,R6
0002 24FF           ADD    A,#0FFH
0004 9290           MOV    LED_VM,C
                                           ; SOURCE LINE # 17 
0006 22             RET    

            ; FUNCTION _vermelho (END)

            ; FUNCTION _ligarMotores (BEGIN)
              ; Register R7 is assigned to parameter sinal
                                           ; SOURCE LINE # 9 
0000 EF             MOV    A,R7
0001 6005           JZ     ?ELSE3
                                           ; SOURCE LINE # 10 
0003 D2B3           SETB   motor1
                                           ; SOURCE LINE # 11 
0005 D2B5           SETB   motor2
0007 22             RET    
0008         ?ELSE3:
                                           ; SOURCE LINE # 13 
0008 C2B3           CLR    motor1
                                           ; SOURCE LINE # 14 
000A C2B5           CLR    motor2
                                           ; SOURCE LINE # 16 
000C 22             RET    

            ; FUNCTION _ligarMotores (END)

            ; FUNCTION parar (BEGIN)
                                           ; SOURCE LINE # 19 
0000 C2B3           CLR    motor1_1
                                           ; SOURCE LINE # 20 
0002 C2B4           CLR    motor1_2
                                           ; SOURCE LINE # 21 
0004 C2B6           CLR    motor2_1
                                           ; SOURCE LINE # 22 
0006 C2B7           CLR    motor2_2
                                           ; SOURCE LINE # 23 
0008 22             RET    

            ; FUNCTION parar (END)

            ; FUNCTION _motorEsquerdo (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 26 
0000 BE000B         CJNE   R6,#000H,?DEFAULT1
0003 EF             MOV    A,R7
0004 14             DEC    A
0005 6002           JZ     ?CASE1
0007 8005           SJMP   ?DEFAULT1
0009         ?CASE1:
                                           ; SOURCE LINE # 29 
0009 C2B3           CLR    motor1_1
                                           ; SOURCE LINE # 30 
000B D2B4           SETB   motor1_2
                                           ; SOURCE LINE # 31 
000D 22             RET    
000E         ?DEFAULT1:
                                           ; SOURCE LINE # 33 
000E D2B3           SETB   motor1_1
                                           ; SOURCE LINE # 34 
0010 C2B4           CLR    motor1_2
                                           ; SOURCE LINE # 37 
0012 22             RET    

            ; FUNCTION _motorEsquerdo (END)

            ; FUNCTION _motorDireito (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 40 
0000 BE000B         CJNE   R6,#000H,?DEFAULT3
0003 EF             MOV    A,R7
0004 14             DEC    A
0005 6002           JZ     ?CASE3
0007 8005           SJMP   ?DEFAULT3
0009         ?CASE3:
                                           ; SOURCE LINE # 43 
0009 D2B6           SETB   motor2_1
                                           ; SOURCE LINE # 44 
000B C2B7           CLR    motor2_2
                                           ; SOURCE LINE # 45 
000D 22             RET    
000E         ?DEFAULT3:
                                           ; SOURCE LINE # 47 
000E C2B6           CLR    motor2_1
                                           ; SOURCE LINE # 48 
0010 D2B7           SETB   motor2_2
                                           ; SOURCE LINE # 51 
0012 22             RET    

            ; FUNCTION _motorDireito (END)

            ; FUNCTION _mover (BEGIN)
              ; Register R5 is assigned to parameter direcao
                                           ; SOURCE LINE # 1 
0000 8F05           MOV    AR5,R7
                                           ; SOURCE LINE # 3 
0002 EF             MOV    A,R7
0003 24BA           ADD    A,#0BAH
0005 6009           JZ     ?CASE7
0007 24F6           ADD    A,#0F6H
0009 601A           JZ     ?CASE8
000B 24FC           ADD    A,#0FCH
000D 600C           JZ     ?CASE9
000F         ?LAB54:
000F 22             RET    
0010         ?CASE7:
                                           ; SOURCE LINE # 5 
0010 E4             CLR    A
0011 FE             MOV    R6,A
0012 7F01           MOV    R7,#001H
0014 120000  R      LCALL  _motorDireito
                                           ; SOURCE LINE # 6 
0017 120000  R      LCALL  _motorEsquerdo
                                           ; SOURCE LINE # 7 
001A 22             RET    
001B         ?CASE9:
                                           ; SOURCE LINE # 9 
001B E4             CLR    A
001C FE             MOV    R6,A
001D FF             MOV    R7,A
001E 120000  R      LCALL  _motorDireito
                                           ; SOURCE LINE # 10 
0021 120000  R      LCALL  _motorEsquerdo
                                           ; SOURCE LINE # 11 
0024 22             RET    
0025         ?CASE8:
                                           ; SOURCE LINE # 13 
0025 120000  R      LCALL  parar
                                           ; SOURCE LINE # 18 
0028 22             RET    

            ; FUNCTION _mover (END)

            ; FUNCTION _girar (BEGIN)
              ; Register R5 is assigned to parameter sentido
                                           ; SOURCE LINE # 19 
0000 8F05           MOV    AR5,R7
                                           ; SOURCE LINE # 21 
0002 EF             MOV    A,R7
0003 24BC           ADD    A,#0BCH
0005 6014           JZ     ?CASE12
0007 14             DEC    A
0008 6001           JZ     ?CASE13
000A         ?LAB58:
000A 22             RET    
000B         ?CASE13:
                                           ; SOURCE LINE # 24 
000B E4             CLR    A
000C FE             MOV    R6,A
000D FF             MOV    R7,A
000E 120000  R      LCALL  _motorDireito
                                           ; SOURCE LINE # 25 
0011 0F             INC    R7
0012 120000  R      LCALL  _motorEsquerdo
                                           ; SOURCE LINE # 26 
0015 E4             CLR    A
0016 FF             MOV    R7,A
0017 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 27 
001A 22             RET    
001B         ?CASE12:
                                           ; SOURCE LINE # 29 
001B E4             CLR    A
001C FE             MOV    R6,A
001D 7F01           MOV    R7,#001H
001F 120000  R      LCALL  _motorDireito
                                           ; SOURCE LINE # 30 
0022 E4             CLR    A
0023 FF             MOV    R7,A
0024 120000  R      LCALL  _motorEsquerdo
                                           ; SOURCE LINE # 31 
0027 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 36 
002A 22             RET    

            ; FUNCTION _girar (END)

            ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 8 
0000 E4             CLR    A
0001 FE             MOV    R6,A
0002 7F01           MOV    R7,#001H
0004 120000  R      LCALL  _vermelho
                                           ; SOURCE LINE # 9 
0007 120000  R      LCALL  _amarelo
                                           ; SOURCE LINE # 10 
000A 120000  R      LCALL  _verde
000D         ?WHILE17:
                                           ; SOURCE LINE # 13 
000D 120000  R      LCALL  robo
0010 80FB           SJMP   ?WHILE17

            ; FUNCTION main (END)

            ; FUNCTION robo (BEGIN)
                                           ; SOURCE LINE # 21 
0000 120000  R      LCALL  sensorFrontal
                                           ; SOURCE LINE # 24 
0003 C000    R      PUSH   sen_fro
0005 C000    R      PUSH   sen_fro+01H
0007 C000    R      PUSH   sen_fro+02H
0009 C000    R      PUSH   sen_fro+03H
000B E4             CLR    A
000C FE             MOV    R6,A
000D FC             MOV    R4,A
000E FD             MOV    R5,A
000F 7F64           MOV    R7,#064H
0011 120000  R      LCALL  ?C_CMPLS
0014 BF0169         CJNE   R7,#001H,?ELSE10
                                           ; SOURCE LINE # 26 
0017 E4             CLR    A
0018 F500    R      MOV    cnt_re,A
001A F500    R      MOV    cnt_re+01H,A
                                           ; SOURCE LINE # 28 
001C 120000  R      LCALL  sensorEsquerdo
                                           ; SOURCE LINE # 29 
001F 120000  R      LCALL  sensorDireito
                                           ; SOURCE LINE # 33 
0022 C000    R      PUSH   sen_esq
0024 C000    R      PUSH   sen_esq+01H
0026 C000    R      PUSH   sen_esq+02H
0028 C000    R      PUSH   sen_esq+03H
002A E4             CLR    A
002B FE             MOV    R6,A
002C FC             MOV    R4,A
002D FD             MOV    R5,A
002E 7F64           MOV    R7,#064H
0030 120000  R      LCALL  ?C_CMPLS
0033 BFFF18         CJNE   R7,#0FFH,?NXT41
                                           ; SOURCE LINE # 34 
0036 7F44           MOV    R7,#044H
0038 120000  R      LCALL  _girar
                                           ; SOURCE LINE # 35 
003B E4             CLR    A
003C FE             MOV    R6,A
003D 7F0A           MOV    R7,#00AH
003F 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 36 
0042 7F46           MOV    R7,#046H
0044 120000  R      LCALL  _mover
                                           ; SOURCE LINE # 37 
0047 E4             CLR    A
0048 FE             MOV    R6,A
0049 7F0A           MOV    R7,#00AH
004B 120000  R      LCALL  _delay
004E         ?NXT41:
                                           ; SOURCE LINE # 40 
004E C000    R      PUSH   sen_dir
0050 C000    R      PUSH   sen_dir+01H
0052 C000    R      PUSH   sen_dir+02H
0054 C000    R      PUSH   sen_dir+03H
0056 E4             CLR    A
0057 FC             MOV    R4,A
0058 FD             MOV    R5,A
0059 FE             MOV    R6,A
005A 7F64           MOV    R7,#064H
005C 120000  R      LCALL  ?C_CMPLS
005F BFFF18         CJNE   R7,#0FFH,?NXT42
                                           ; SOURCE LINE # 41 
0062 7F45           MOV    R7,#045H
0064 120000  R      LCALL  _girar
                                           ; SOURCE LINE # 42 
0067 E4             CLR    A
0068 FE             MOV    R6,A
0069 7F0A           MOV    R7,#00AH
006B 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 43 
006E 7F46           MOV    R7,#046H
0070 120000  R      LCALL  _mover
                                           ; SOURCE LINE # 44 
0073 E4             CLR    A
0074 FE             MOV    R6,A
0075 7F0A           MOV    R7,#00AH
0077 120000  R      LCALL  _delay
007A         ?NXT42:
                                           ; SOURCE LINE # 47 
007A 7F46           MOV    R7,#046H
007C 120000  R      LCALL  _mover
007F 22             RET    
0080         ?ELSE10:
                                           ; SOURCE LINE # 51 
0080 0500    R      INC    cnt_re+01H
0082 E500    R      MOV    A,cnt_re+01H
0084 7002           JNZ    ?LAB66
0086 0500    R      INC    cnt_re
0088         ?LAB66:
                                           ; SOURCE LINE # 53 
0088 7F54           MOV    R7,#054H
008A 120000  R      LCALL  _mover
                                           ; SOURCE LINE # 54 
008D E500    R      MOV    A,cnt_re
008F 6480           XRL    A,#080H
0091 B48005         CJNE   A,#080H,?LAB67
0094 E500    R      MOV    A,cnt_re+01H
0096 B40500         CJNE   A,#005H,?LAB67
0099         ?LAB67:
0099 5009           JNC    ?ELSE13
                                           ; SOURCE LINE # 55 
009B E4             CLR    A
009C FE             MOV    R6,A
009D 7F0F           MOV    R7,#00FH
009F 120000  R      LCALL  _delay
00A2 804D           SJMP   ?NXT43
00A4         ?ELSE13:
                                           ; SOURCE LINE # 57 
00A4 E4             CLR    A
00A5 FE             MOV    R6,A
00A6 7F1E           MOV    R7,#01EH
00A8 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 59 
00AB C000    R      PUSH   sen_esq
00AD C000    R      PUSH   sen_esq+01H
00AF C000    R      PUSH   sen_esq+02H
00B1 C000    R      PUSH   sen_esq+03H
00B3 AC00    R      MOV    R4,sen_dir
00B5 AD00    R      MOV    R5,sen_dir+01H
00B7 AE00    R      MOV    R6,sen_dir+02H
00B9 AF00    R      MOV    R7,sen_dir+03H
00BB 120000  R      LCALL  ?C_CMPLS
00BE BF0107         CJNE   R7,#001H,?ELSE14
                                           ; SOURCE LINE # 60 
00C1 7F45           MOV    R7,#045H
00C3 120000  R      LCALL  _girar
00C6 8022           SJMP   ?NXT44
00C8         ?ELSE14:
                                           ; SOURCE LINE # 62 
00C8 C000    R      PUSH   sen_esq
00CA C000    R      PUSH   sen_esq+01H
00CC C000    R      PUSH   sen_esq+02H
00CE C000    R      PUSH   sen_esq+03H
00D0 AC00    R      MOV    R4,sen_dir
00D2 AD00    R      MOV    R5,sen_dir+01H
00D4 AE00    R      MOV    R6,sen_dir+02H
00D6 AF00    R      MOV    R7,sen_dir+03H
00D8 120000  R      LCALL  ?C_CMPL
00DB BF0007         CJNE   R7,#000H,?ELSE15
                                           ; SOURCE LINE # 63 
00DE 7F46           MOV    R7,#046H
00E0 120000  R      LCALL  _mover
00E3 8005           SJMP   ?NXT44
00E5         ?ELSE15:
                                           ; SOURCE LINE # 65 
00E5 7F44           MOV    R7,#044H
00E7 120000  R      LCALL  _girar
00EA         ?NXT44:
                                           ; SOURCE LINE # 67 
00EA E4             CLR    A
00EB FE             MOV    R6,A
00EC 7F0A           MOV    R7,#00AH
00EE 120000  R      LCALL  _delay
00F1         ?NXT43:
                                           ; SOURCE LINE # 70 
00F1 7F50           MOV    R7,#050H
00F3 120000  R      LCALL  _mover
                                           ; SOURCE LINE # 72 
00F6 120000  R      LCALL  curva
                                           ; SOURCE LINE # 76 
00F9 22             RET    

            ; FUNCTION robo (END)

            ; FUNCTION curva (BEGIN)
                                           ; SOURCE LINE # 80 
0000 120000  R      LCALL  sensorEsquerdo
                                           ; SOURCE LINE # 81 
0003 120000  R      LCALL  sensorDireito
                                           ; SOURCE LINE # 83 
0006 C000    R      PUSH   sen_esq
0008 C000    R      PUSH   sen_esq+01H
000A C000    R      PUSH   sen_esq+02H
000C C000    R      PUSH   sen_esq+03H
000E E4             CLR    A
000F FC             MOV    R4,A
0010 FD             MOV    R5,A
0011 7E01           MOV    R6,#001H
0013 7FF4           MOV    R7,#0F4H
0015 120000  R      LCALL  ?C_CMPLS
0018 BF0157         CJNE   R7,#001H,?NXT50
001B C000    R      PUSH   sen_dir
001D C000    R      PUSH   sen_dir+01H
001F C000    R      PUSH   sen_dir+02H
0021 C000    R      PUSH   sen_dir+03H
0023 E4             CLR    A
0024 FC             MOV    R4,A
0025 FD             MOV    R5,A
0026 7E01           MOV    R6,#001H
0028 7FF4           MOV    R7,#0F4H
002A 120000  R      LCALL  ?C_CMPLS
002D BF0142         CJNE   R7,#001H,?NXT50
                                           ; SOURCE LINE # 85 
0030 C000    R      PUSH   sen_esq
0032 C000    R      PUSH   sen_esq+01H
0034 C000    R      PUSH   sen_esq+02H
0036 C000    R      PUSH   sen_esq+03H
0038 AC00    R      MOV    R4,sen_dir
003A AD00    R      MOV    R5,sen_dir+01H
003C AE00    R      MOV    R6,sen_dir+02H
003E AF00    R      MOV    R7,sen_dir+03H
0040 120000  R      LCALL  ?C_CMPLS
0043 BF0107         CJNE   R7,#001H,?ELSE21
                                           ; SOURCE LINE # 86 
0046 7F45           MOV    R7,#045H
0048 120000  R      LCALL  _girar
004B 8005           SJMP   ?NXT51
004D         ?ELSE21:
                                           ; SOURCE LINE # 88 
004D 7F44           MOV    R7,#044H
004F 120000  R      LCALL  _girar
0052         ?NXT51:
                                           ; SOURCE LINE # 90 
0052 E4             CLR    A
0053 FE             MOV    R6,A
0054 7F14           MOV    R7,#014H
0056 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 92 
0059 7F50           MOV    R7,#050H
005B 120000  R      LCALL  _mover
                                           ; SOURCE LINE # 93 
005E E4             CLR    A
005F FE             MOV    R6,A
0060 7F05           MOV    R7,#005H
0062 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 94 
0065 7F46           MOV    R7,#046H
0067 120000  R      LCALL  _mover
                                           ; SOURCE LINE # 95 
006A E4             CLR    A
006B FE             MOV    R6,A
006C 7F14           MOV    R7,#014H
006E 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 115 
0071 22             RET    
0072         ?NXT50:
                                           ; SOURCE LINE # 102 
0072 C000    R      PUSH   sen_esq
0074 C000    R      PUSH   sen_esq+01H
0076 C000    R      PUSH   sen_esq+02H
0078 C000    R      PUSH   sen_esq+03H
007A E4             CLR    A
007B FC             MOV    R4,A
007C FD             MOV    R5,A
007D 7E01           MOV    R6,#001H
007F 7FF4           MOV    R7,#0F4H
0081 120000  R      LCALL  ?C_CMPLS
0084 BF010D         CJNE   R7,#001H,?NXT52
                                           ; SOURCE LINE # 104 
0087 7F45           MOV    R7,#045H
0089 120000  R      LCALL  _girar
                                           ; SOURCE LINE # 105 
008C E4             CLR    A
008D FE             MOV    R6,A
008E 7F0A           MOV    R7,#00AH
0090 120000  R      LCALL  _delay
                                           ; SOURCE LINE # 115 
0093 22             RET    
0094         ?NXT52:
                                           ; SOURCE LINE # 110 
0094 C000    R      PUSH   sen_dir
0096 C000    R      PUSH   sen_dir+01H
0098 C000    R      PUSH   sen_dir+02H
009A C000    R      PUSH   sen_dir+03H
009C E4             CLR    A
009D FC             MOV    R4,A
009E FD             MOV    R5,A
009F 7E01           MOV    R6,#001H
00A1 7FF4           MOV    R7,#0F4H
00A3 120000  R      LCALL  ?C_CMPLS
00A6 BF010C         CJNE   R7,#001H,?NXT53
                                           ; SOURCE LINE # 111 
00A9 7F44           MOV    R7,#044H
00AB 120000  R      LCALL  _girar
                                           ; SOURCE LINE # 112 
00AE E4             CLR    A
00AF FE             MOV    R6,A
00B0 7F0A           MOV    R7,#00AH
00B2 120000  R      LCALL  _delay
00B5         ?NXT53:
                                           ; SOURCE LINE # 115 
00B5 22             RET    

            ; FUNCTION curva (END)

RC51 COMPILER V03.03.40,  MAIN                    10/15/13  19:33:49  PAGE  3

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====

sen_esq. . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0000H   4    
sen_fro. . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0004H   4    
sen_dir. . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0008H   4    
wait . . . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    000CH   4    
delay. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  j?040. . . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  j?040. . . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
i?041. . . . . . . . . . . . . . . . .  AUTO    DATA    INT     0000H   2    
sensorEsquerdo . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
sensorDireito. . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
sensorFrontal. . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
amarelo. . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?048 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?048 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
verde. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?049 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?049 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
vermelho . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?050 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?050 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
ligarMotores . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  sinal?051. . . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
  sinal?051. . . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
parar. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
motorEsquerdo. . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?052 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?052 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
motorDireito . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?053 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?053 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
mover. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  direcao?054. . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
  direcao?054. . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
girar. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  sentido?055. . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
  sentido?055. . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
main . . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
cnt_re . . . . . . . . . . . . . . . .  PUBLIC  DATA    INT     0010H   2    
robo . . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
curva. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
RC51 COMPILER V03.03.40,  MAIN                    10/15/13  19:33:50  PAGE  4



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    837    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

RC51 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
