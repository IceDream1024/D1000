RC51 COMPILER V03.03.40,  D1000_API               09/30/13  19:28:27  PAGE  1

QCW(0x00002F32)

WIN32 RC51 COMPILER V03.03.40, COMPILATION OF MODULE D1000_API 
OBJECT MODULE PLACED IN q:\robo\oficial\headers\d1000_api.obj
COMPILER INVOKED BY: RC51.EXE Q:\ROBO\OFICIAL\HEADERS\D1000_API.H OBJECT(Q:\ROBO
            -\OFICIAL\HEADERS\D1000_API.OBJ) PIN(C:\RIDE\INC;C:\RIDE\INC\51) PIN
            -(C:\RIDE\INC\51\) NOAM PR(Q:\ROBO\OFICIAL\HEADERS\D1000_API.LST) CD
            - SB OE(1) SM FP(NOFLOAT) PW(80) NOIS UNSIGNEDCHAR ET(CHAR) 

stmt level    source
   1          #include <reg52.h>
   2          
   3          #define DISTANCIA_MAXIMA_SENSOR 200
   4          
   5          #define DISTANCIA_LIMITE_SENSOR_FRENTE 200
   6          #define DISTANCIA_LIMITE_SENSOR_ESQUERDA 200
   7          #define DISTANCIA_LIMITE_SENSOR_DIREITA 200
   8          
   9          // Leds da placa (estão acesos em sinal negativo (LED_VM = 0) ):
  10          at 0x90 sbit LED_VM;
  11          at 0x91 sbit LED_AM;
  12          at 0x92 sbit LED_VD; 
  13          
  14          // Saida para os motores:
  15          at 0xB3 sbit motor1_1;
  16          at 0xB4 sbit motor1_2;
  17          at 0xB6 sbit motor2_1;
  18          at 0xB7 sbit motor2_2;
  19          
  20          // Para ligar os motores.
  21          at 0xB3 sbit motor1; 
  22          at 0xB5 sbit motor2;
  23          	
  24          // Echo dos Sensores:
  25          at 0xA7 sbit eco_esq;
  26          at 0xA2 sbit eco_fro;
  27          at 0xA3 sbit eco_dir;
  28          
  29          //Totalizadores de sensor
  30          long int sen_esq = 0;
  31          long int sen_fro = 0;
  32          long int sen_dir = 0;
  33          	
  34          // Trigger para os sensores:
  35          at 0xA0 sbit trigger;
  36          
  37          #include "delay.h"

WARNING C092 IN LINE 32 OF delay.h : 'ms' is declared but not used

WARNING C092 IN LINE 36 OF delay.h : 'us' is declared but not used
  38          #include "sensor.h"
  39          #include "led.h"
  40          #include "motor.h"
  41          #include "movimento.h"
  42          
RC51 COMPILER V03.03.40,  D1000_API               09/30/13  19:28:27  PAGE  2

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION _waitS (BEGIN)
              ; Register R2R3 is assigned to parameter seconds
                                           ; SOURCE LINE # 8 
0000 8E02           MOV    AR2,R6
0002 8F03           MOV    AR3,R7
                                           ; SOURCE LINE # 12 
0004 758901         MOV    TMOD,#001H
                                           ; SOURCE LINE # 13 
0007 758CDC         MOV    TH0,#0DCH
                                           ; SOURCE LINE # 14 
000A 758A00         MOV    TL0,#000H
                                           ; SOURCE LINE # 15 
000D D28C           SETB   TR0
                                           ; SOURCE LINE # 17 
000F E4             CLR    A
0010 F500    R      MOV    i,A
0012 F500    R      MOV    i+01H,A
0014         ?FOR1:
                                           ; SOURCE LINE # 19 
0014 E4             CLR    A
0015 F500    R      MOV    j,A
0017 F500    R      MOV    j+01H,A
0019         ?WHILE2:
                                           ; SOURCE LINE # 20 
0019 8A04           MOV    AR4,R2
001B 8B05           MOV    AR5,R3
001D E4             CLR    A
001E FE             MOV    R6,A
001F 7F64           MOV    R7,#064H
0021 120000  R      LCALL  ?C_IMUL
0024 8EF0           MOV    B,R6
0026 B2F7           CPL    B.7
0028 E500    R      MOV    A,j
002A 6480           XRL    A,#080H
002C B5F006         CJNE   A,B,?LAB6
002F E500    R      MOV    A,j+01H
0031 B50701         CJNE   A,AR7,?LAB6
0034 D3             SETB   C
0035         ?LAB6:
0035 5015           JNC    ?NXT5
0037         ?WHILE3:
                                           ; SOURCE LINE # 22 
0037 308DFD         JNB    TF0,?WHILE3
                                           ; SOURCE LINE # 23 
003A 758CDC         MOV    TH0,#0DCH
                                           ; SOURCE LINE # 24 
003D 758A00         MOV    TL0,#000H
                                           ; SOURCE LINE # 25 
0040 C28D           CLR    TF0
                                           ; SOURCE LINE # 26 
0042 0500    R      INC    j+01H
0044 E500    R      MOV    A,j+01H
0046 70D1           JNZ    ?WHILE2
0048 0500    R      INC    j
004A 80CD           SJMP   ?WHILE2
004C         ?NXT5:
                                           ; SOURCE LINE # 17 
004C 0500    R      INC    i+01H
004E E500    R      MOV    A,i+01H
0050 B401C1         CJNE   A,#001H,?FOR1
                                           ; SOURCE LINE # 30 
0053 22             RET    

            ; FUNCTION _waitS (END)

            ; FUNCTION _waitMs (BEGIN)
                                           ; SOURCE LINE # 34 
0000 22             RET    

            ; FUNCTION _waitMs (END)

            ; FUNCTION _waitUs (BEGIN)
                                           ; SOURCE LINE # 38 
0000 22             RET    

            ; FUNCTION _waitUs (END)

            ; FUNCTION delay (BEGIN)
                                           ; SOURCE LINE # 49 
0000 758901         MOV    TMOD,#001H
                                           ; SOURCE LINE # 50 
0003 758CDC         MOV    TH0,#0DCH
                                           ; SOURCE LINE # 51 
0006 758A00         MOV    TL0,#000H
                                           ; SOURCE LINE # 52 
0009 D28C           SETB   TR0
              ; R2R3 is assigned to i
              ; R4R5 is assigned to j
                                           ; SOURCE LINE # 54 
000B E4             CLR    A
000C FA             MOV    R2,A
000D FB             MOV    R3,A
000E         ?FOR3:
                                           ; SOURCE LINE # 56 
000E E4             CLR    A
000F FC             MOV    R4,A
0010 FD             MOV    R5,A
0011         ?WHILE6:
                                           ; SOURCE LINE # 57 
0011 EC             MOV    A,R4
0012 6480           XRL    A,#080H
0014 B48004         CJNE   A,#080H,?LAB20
0017 BD0501         CJNE   R5,#005H,?LAB20
001A D3             SETB   C
001B         ?LAB20:
001B 5012           JNC    ?NXT13
001D         ?WHILE7:
                                           ; SOURCE LINE # 59 
001D 308DFD         JNB    TF0,?WHILE7
                                           ; SOURCE LINE # 60 
0020 758CDC         MOV    TH0,#0DCH
                                           ; SOURCE LINE # 61 
0023 758A00         MOV    TL0,#000H
                                           ; SOURCE LINE # 62 
0026 C28D           CLR    TF0
                                           ; SOURCE LINE # 63 
0028 0D             INC    R5
0029 ED             MOV    A,R5
002A 70E5           JNZ    ?WHILE6
002C 0C             INC    R4
002D 80E2           SJMP   ?WHILE6
002F         ?NXT13:
                                           ; SOURCE LINE # 54 
002F 0B             INC    R3
0030 BB01DB         CJNE   R3,#001H,?FOR3
                                           ; SOURCE LINE # 66 
0033 22             RET    

            ; FUNCTION delay (END)

            ; FUNCTION sensorEsquerdo (BEGIN)
                                           ; SOURCE LINE # 13 
0000 D2A0           SETB   trigger
                                           ; SOURCE LINE # 14 
0002 120000  R      LCALL  delay
                                           ; SOURCE LINE # 16 
0005 C2A0           CLR    trigger
                                           ; SOURCE LINE # 18 
0007 E4             CLR    A
0008 F500    R      MOV    sen_esq,A
000A F500    R      MOV    sen_esq+01H,A
000C F500    R      MOV    sen_esq+02H,A
000E F500    R      MOV    sen_esq+03H,A
0010         ?WHILE10:
                                           ; SOURCE LINE # 19 
0010 20A702         JB     eco_esq,?WHILE11
0013 80FB           SJMP   ?WHILE10
0015         ?WHILE11:
                                           ; SOURCE LINE # 20 
0015 30A72A         JNB    eco_esq,?NXT19
0018 C000    R      PUSH   sen_esq
001A C000    R      PUSH   sen_esq+01H
001C C000    R      PUSH   sen_esq+02H
001E C000    R      PUSH   sen_esq+03H
0020 E4             CLR    A
0021 FC             MOV    R4,A
0022 FD             MOV    R5,A
0023 FE             MOV    R6,A
0024 7FC8           MOV    R7,#0C8H
0026 120000  R      LCALL  ?C_CMPLS
0029 BFFF16         CJNE   R7,#0FFH,?NXT19
002C 0500    R      INC    sen_esq+03H
002E E500    R      MOV    A,sen_esq+03H
0030 70E3           JNZ    ?WHILE11
0032 0500    R      INC    sen_esq+02H
0034 E500    R      MOV    A,sen_esq+02H
0036 70DD           JNZ    ?WHILE11
0038 0500    R      INC    sen_esq+01H
003A E500    R      MOV    A,sen_esq+01H
003C 70D7           JNZ    ?WHILE11
003E 0500    R      INC    sen_esq
0040 80D3           SJMP   ?WHILE11
0042         ?NXT19:
                                           ; SOURCE LINE # 24 
0042 22             RET    

            ; FUNCTION sensorEsquerdo (END)

            ; FUNCTION sensorDireito (BEGIN)
                                           ; SOURCE LINE # 32 
0000 D2A0           SETB   trigger
                                           ; SOURCE LINE # 33 
0002 120000  R      LCALL  delay
                                           ; SOURCE LINE # 35 
0005 C2A0           CLR    trigger
                                           ; SOURCE LINE # 37 
0007 E4             CLR    A
0008 F500    R      MOV    sen_dir,A
000A F500    R      MOV    sen_dir+01H,A
000C F500    R      MOV    sen_dir+02H,A
000E F500    R      MOV    sen_dir+03H,A
0010         ?WHILE14:
                                           ; SOURCE LINE # 38 
0010 20A302         JB     eco_dir,?WHILE15
0013 80FB           SJMP   ?WHILE14
0015         ?WHILE15:
                                           ; SOURCE LINE # 39 
0015 30A32A         JNB    eco_dir,?NXT23
0018 C000    R      PUSH   sen_dir
001A C000    R      PUSH   sen_dir+01H
001C C000    R      PUSH   sen_dir+02H
001E C000    R      PUSH   sen_dir+03H
0020 E4             CLR    A
0021 FC             MOV    R4,A
0022 FD             MOV    R5,A
0023 FE             MOV    R6,A
0024 7FC8           MOV    R7,#0C8H
0026 120000  R      LCALL  ?C_CMPLS
0029 BFFF16         CJNE   R7,#0FFH,?NXT23
002C 0500    R      INC    sen_dir+03H
002E E500    R      MOV    A,sen_dir+03H
0030 70E3           JNZ    ?WHILE15
0032 0500    R      INC    sen_dir+02H
0034 E500    R      MOV    A,sen_dir+02H
0036 70DD           JNZ    ?WHILE15
0038 0500    R      INC    sen_dir+01H
003A E500    R      MOV    A,sen_dir+01H
003C 70D7           JNZ    ?WHILE15
003E 0500    R      INC    sen_dir
0040 80D3           SJMP   ?WHILE15
0042         ?NXT23:
                                           ; SOURCE LINE # 44 
0042 22             RET    

            ; FUNCTION sensorDireito (END)

            ; FUNCTION sensorFrontal (BEGIN)
                                           ; SOURCE LINE # 52 
0000 D2A0           SETB   trigger
                                           ; SOURCE LINE # 53 
0002 120000  R      LCALL  delay
                                           ; SOURCE LINE # 55 
0005 C2A0           CLR    trigger
                                           ; SOURCE LINE # 57 
0007 E4             CLR    A
0008 F500    R      MOV    sen_fro,A
000A F500    R      MOV    sen_fro+01H,A
000C F500    R      MOV    sen_fro+02H,A
000E F500    R      MOV    sen_fro+03H,A
0010         ?WHILE18:
                                           ; SOURCE LINE # 58 
0010 20A202         JB     eco_fro,?WHILE19
0013 80FB           SJMP   ?WHILE18
0015         ?WHILE19:
                                           ; SOURCE LINE # 59 
0015 30A22A         JNB    eco_fro,?NXT27
0018 C000    R      PUSH   sen_fro
001A C000    R      PUSH   sen_fro+01H
001C C000    R      PUSH   sen_fro+02H
001E C000    R      PUSH   sen_fro+03H
0020 E4             CLR    A
0021 FC             MOV    R4,A
0022 FD             MOV    R5,A
0023 FE             MOV    R6,A
0024 7FC8           MOV    R7,#0C8H
0026 120000  R      LCALL  ?C_CMPLS
0029 BFFF16         CJNE   R7,#0FFH,?NXT27
002C 0500    R      INC    sen_fro+03H
002E E500    R      MOV    A,sen_fro+03H
0030 70E3           JNZ    ?WHILE19
0032 0500    R      INC    sen_fro+02H
0034 E500    R      MOV    A,sen_fro+02H
0036 70DD           JNZ    ?WHILE19
0038 0500    R      INC    sen_fro+01H
003A E500    R      MOV    A,sen_fro+01H
003C 70D7           JNZ    ?WHILE19
003E 0500    R      INC    sen_fro
0040 80D3           SJMP   ?WHILE19
0042         ?NXT27:
                                           ; SOURCE LINE # 63 
0042 22             RET    

            ; FUNCTION sensorFrontal (END)

            ; FUNCTION _amarelo (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 8 
0000 EF             MOV    A,R7
0001 4E             ORL    A,R6
0002 24FF           ADD    A,#0FFH
0004 9291           MOV    LED_AM,C
                                           ; SOURCE LINE # 9 
0006 22             RET    

            ; FUNCTION _amarelo (END)

            ; FUNCTION _verde (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 12 
0000 EF             MOV    A,R7
0001 4E             ORL    A,R6
0002 24FF           ADD    A,#0FFH
0004 9292           MOV    LED_VD,C
                                           ; SOURCE LINE # 13 
0006 22             RET    

            ; FUNCTION _verde (END)

            ; FUNCTION _vermelho (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 16 
0000 EF             MOV    A,R7
0001 4E             ORL    A,R6
0002 24FF           ADD    A,#0FFH
0004 9290           MOV    LED_VM,C
                                           ; SOURCE LINE # 17 
0006 22             RET    

            ; FUNCTION _vermelho (END)

            ; FUNCTION _ligarMotores (BEGIN)
              ; Register R7 is assigned to parameter sinal
                                           ; SOURCE LINE # 9 
0000 EF             MOV    A,R7
0001 6005           JZ     ?ELSE1
                                           ; SOURCE LINE # 10 
0003 D2B3           SETB   motor1
                                           ; SOURCE LINE # 11 
0005 D2B5           SETB   motor2
0007 22             RET    
0008         ?ELSE1:
                                           ; SOURCE LINE # 13 
0008 C2B3           CLR    motor1
                                           ; SOURCE LINE # 14 
000A C2B5           CLR    motor2
                                           ; SOURCE LINE # 16 
000C 22             RET    

            ; FUNCTION _ligarMotores (END)

            ; FUNCTION _motorEsquerdo (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 19 
0000 BE000B         CJNE   R6,#000H,?DEFAULT1
0003 EF             MOV    A,R7
0004 14             DEC    A
0005 6002           JZ     ?CASE1
0007 8005           SJMP   ?DEFAULT1
0009         ?CASE1:
                                           ; SOURCE LINE # 22 
0009 C2B3           CLR    motor1_1
                                           ; SOURCE LINE # 23 
000B D2B4           SETB   motor1_2
                                           ; SOURCE LINE # 24 
000D 22             RET    
000E         ?DEFAULT1:
                                           ; SOURCE LINE # 26 
000E D2B3           SETB   motor1_1
                                           ; SOURCE LINE # 27 
0010 C2B4           CLR    motor1_2
                                           ; SOURCE LINE # 30 
0012 22             RET    

            ; FUNCTION _motorEsquerdo (END)

            ; FUNCTION _motorDireito (BEGIN)
              ; Register R6R7 is assigned to parameter port
                                           ; SOURCE LINE # 33 
0000 BE000B         CJNE   R6,#000H,?DEFAULT3
0003 EF             MOV    A,R7
0004 14             DEC    A
0005 6002           JZ     ?CASE3
0007 8005           SJMP   ?DEFAULT3
0009         ?CASE3:
                                           ; SOURCE LINE # 36 
0009 C2B6           CLR    motor2_1
                                           ; SOURCE LINE # 37 
000B D2B7           SETB   motor2_2
                                           ; SOURCE LINE # 38 
000D 22             RET    
000E         ?DEFAULT3:
                                           ; SOURCE LINE # 40 
000E D2B6           SETB   motor2_1
                                           ; SOURCE LINE # 41 
0010 C2B7           CLR    motor2_2
                                           ; SOURCE LINE # 44 
0012 22             RET    

            ; FUNCTION _motorDireito (END)

            ; FUNCTION _mover (BEGIN)
              ; Register R5 is assigned to parameter direcao
                                           ; SOURCE LINE # 1 
0000 8F05           MOV    AR5,R7
                                           ; SOURCE LINE # 3 
0002 EF             MOV    A,R7
0003 24BA           ADD    A,#0BAH
0005 6005           JZ     ?CASE6
0007 24F2           ADD    A,#0F2H
0009 600C           JZ     ?CASE7
000B         ?LAB72:
000B 22             RET    
000C         ?CASE6:
                                           ; SOURCE LINE # 5 
000C E4             CLR    A
000D FE             MOV    R6,A
000E 7F01           MOV    R7,#001H
0010 120000  R      LCALL  _motorDireito
                                           ; SOURCE LINE # 6 
0013 120000  R      LCALL  _motorEsquerdo
                                           ; SOURCE LINE # 7 
0016 22             RET    
0017         ?CASE7:
                                           ; SOURCE LINE # 9 
0017 E4             CLR    A
0018 FE             MOV    R6,A
0019 FF             MOV    R7,A
001A 120000  R      LCALL  _motorDireito
                                           ; SOURCE LINE # 10 
001D 120000  R      LCALL  _motorEsquerdo
                                           ; SOURCE LINE # 15 
0020 22             RET    

            ; FUNCTION _mover (END)

            ; FUNCTION _girar (BEGIN)
              ; Register R5 is assigned to parameter sentido
                                           ; SOURCE LINE # 16 
0000 8F05           MOV    AR5,R7
                                           ; SOURCE LINE # 18 
0002 EF             MOV    A,R7
0003 24BC           ADD    A,#0BCH
0005 600F           JZ     ?CASE10
0007 14             DEC    A
0008 6001           JZ     ?CASE11
000A         ?LAB76:
000A 22             RET    
000B         ?CASE11:
                                           ; SOURCE LINE # 21 
000B E4             CLR    A
000C FE             MOV    R6,A
000D FF             MOV    R7,A
000E 120000  R      LCALL  _motorDireito
                                           ; SOURCE LINE # 22 
0011 0F             INC    R7
0012 120000  R      LCALL  _motorEsquerdo
                                           ; SOURCE LINE # 23 
0015 22             RET    
0016         ?CASE10:
                                           ; SOURCE LINE # 25 
0016 E4             CLR    A
0017 FE             MOV    R6,A
0018 7F01           MOV    R7,#001H
001A 120000  R      LCALL  _motorDireito
                                           ; SOURCE LINE # 26 
001D E4             CLR    A
001E FF             MOV    R7,A
001F 120000  R      LCALL  _motorEsquerdo
                                           ; SOURCE LINE # 31 
0022 22             RET    

            ; FUNCTION _girar (END)

RC51 COMPILER V03.03.40,  D1000_API               09/30/13  19:28:27  PAGE  3

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====

sen_esq. . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0000H   4    
sen_fro. . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0004H   4    
sen_dir. . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0008H   4    
waitS. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  seconds?040. . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  seconds?040. . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
i?041. . . . . . . . . . . . . . . . .  AUTO    DATA    INT     0000H   2    
j?042. . . . . . . . . . . . . . . . .  AUTO    DATA    INT     0002H   2    
waitMs . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  ms?043 . . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  ms?043 . . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
waitUs . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  us?044 . . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  us?044 . . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
delay. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
i?047. . . . . . . . . . . . . . . . .  AUTO    DATA    INT     0000H   2    
j?048. . . . . . . . . . . . . . . . .  AUTO    DATA    INT     0000H   2    
sensorEsquerdo . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
sensorDireito. . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
sensorFrontal. . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
amarelo. . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?055 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?055 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
verde. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?056 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?056 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
vermelho . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?057 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?057 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
ligarMotores . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  sinal?058. . . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
  sinal?058. . . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
motorEsquerdo. . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?059 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?059 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
motorDireito . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  port?060 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
  port?060 . . . . . . . . . . . . . .  PARAM   DATA    INT     0000H   2    
mover. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  direcao?061. . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
  direcao?061. . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
girar. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  sentido?062. . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
  sentido?062. . . . . . . . . . . . .  PARAM   DATA    U_CHAR  0000H   1    
RC51 COMPILER V03.03.40,  D1000_API               09/30/13  19:28:27  PAGE  4



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    479    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

RC51 COMPILATION COMPLETE.  2 WARNINGS,  0 ERROR
